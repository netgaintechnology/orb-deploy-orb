description: >
  AWS workspaces deployment job

executor: aws-cli

steps:
  - checkout
  - run: mkdir tf_output
  - run: apk update
  - run: apk add jq
  - run: apk add ca-certificates
  - attach_workspace:
      at: tf_output
  - run: |
      aws configure set region $(jq -r .aws_region.value tf_output/output.json)
      # Register the workspace directory
      if grep -q '"workspaces_properties"' aws/terraform.tfvars.json
      then
      jq .workspaces_properties.value tf_output/output.json > temp.json
      cat temp.json | jq --arg DirectoryId $(jq -r .directory_info.value.id tf_output/output.json) '. + {DirectoryId:$DirectoryId}' > temp.json
      jq --argjson argval "$(jq .directory_info.value.vpc_settings[0].subnet_ids tf_output/output.json)" '. += {SubnetIds:$argval}' temp.json > workspaces_properties.json
      aws workspaces register-workspace-directory --cli-input-json "$(jq . workspaces_properties.json)"
      else echo "No workspace directory specified"; fi;
      # Create the workspaces
      if grep -q '"workspaces"' aws/terraform.tfvars.json
      then
      echo '{"Workspaces":' > workspaces.json
      aws kms describe-key --key-id "alias/Workspaces_Volume_Encryption" > key.json
      jq .workspaces.value tf_output/output.json | jq -r --arg DirectoryId $(jq -r .directory_info.value.id tf_output/output.json) --arg KeyId $(jq -r .KeyMetadata.KeyId key.json) 'map(. + {DirectoryId:$DirectoryId}) | map(. + {UserVolumeEncryptionEnabled:true}) | map(. + {RootVolumeEncryptionEnabled:true}) | map(. + {VolumeEncryptionKey:$KeyId})' >> workspaces.json
      echo '}' >> workspaces.json
      aws workspaces create-workspaces --cli-input-json "$(jq . workspaces.json)"
      else echo "No workspaces defined"; fi;
