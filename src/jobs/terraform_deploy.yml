description: |
  terraform deployment

executor: terraform

parameters:
  var-file:
    type: string
    default: ""
    description: |
      Location and name of the var-file you wish to pass into Terraform,
      defaults to "", which means Terraform will not run expecting a var-file to be passed in.
  main-dir:
    type: string
    default: .
    description: |
      Directory within to run all terraform files,
      defaults to the working directory (.)
  tf-workspace:
    type: string
    default: prod
    description: |
      Terraform workspace to use

environment: 
  TF_WORKSPACE: <<parameters.tf-workspace>>

steps:
  - update_alpine_and_checkout
  # Terraform Cloud Access
  - run: |
      echo "# Terraform CLI config" > ~/.terraformrc
      echo "credentials \"app.terraform.io\" {" >> ~/.terraformrc
      echo "  token = \"$TFIO_TOKEN\"" >> ~/.terraformrc
      echo "}" >> ~/.terraformrc
  # AWS Cloud Access
  - run: |
      mkdir ~/.aws
      echo "[default]" > ~/.aws/credentials
      echo "aws_access_key_id = $AWS_ACCESS_KEY_ID-<<parameters.tf-workspace>>" >> ~/.aws/credentials
      echo "aws_secret_access_key = $AWS_SECRET_ACCESS_KEY-<<parameters.tf-workspace>>" >> ~/.aws/credentials
  # Azure Cloud Access
  - run: |
      mkdir ~/.azure
      echo "[default]"
      echo "subscription_id=$AZURE_SUBSCRIPTION_ID-<<parameters.tf-workspace>>]" > ~/.azure/credentials
      echo "client_id=$AZURE_CLIENT_ID-<<parameters.tf-workspace>>" >> ~/.azure/credentials
      echo "secret=$AZURE_CLIENT_SECRET-<<parameters.tf-workspace>>" >> ~/.azure/credentials
      echo "tenant_id=$AZURE_TENANT_ID-<<parameters.tf-workspace>>" >> ~/.azure/credentials
  # GITHUB Private Repo Access
  - run: |
      echo "https://$GITHUB_USER:$GITHUB_TOKEN@github.com" > ~/.git-credentials
      echo "[user]"  > ~/.gitconfig
      echo "  name = $GITHUB_USER" >> ~/.gitconfig
      echo "[credential]" >> ~/.gitconfig
      echo "  helper = store" >> ~/.gitconfig
  # Real work
  - run: |
      cd <<parameters.main-dir>>
      terraform init -upgrade
  - when:
      condition: <<parameters.main-dir>>/<<parameters.var-file>>
      steps:
        - run: |
            cd <<parameters.main-dir>>
            terraform apply -input=false -auto-approve -var-file=<<parameters.var-file>> 
  - unless:
      condition: <<parameters.main-dir>>/<<parameters.var-file>>
      steps:
        - run: |
            cd <<parameters.main-dir>>
            terraform apply -input=false -auto-approve
  - run: |
      cd <<parameters.main-dir>>
      mkdir tf_output
      terraform init
      terraform output -json > tf_output/output.json
  - persist_to_workspace:
      root: <<parameters.main-dir>>/tf_output
      paths: output.json
