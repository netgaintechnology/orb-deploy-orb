description: |
  chef cookbook deployment

executor: chef

parameters:
  chef-server-url:
    type: string
    default: https://api.chef.io/
    description: |
      URL for the chef server.
  chef-server-organization:
    type: string
    description: |
      Chef Server organization name
  chef-supermarket-url:
    type: string
    default: https://supermarket.chef.io/
    description: |
      URL for supermarket to deploy cookbooks to.
  chef-supermarket-user:
    type: string
    description: |
      Supermarket username to publish cookbooks under.

steps:
  - checkout
  - run: mkdir -p /root/.chef
  - run: echo $CHEF_SUPERMARKET_KEY | base64 --decode > /root/.chef/<<parameters.chef-supermarket-user>>.pem
  - run: |
      cat \<<~EOF > /root/.chef/config.rb
        current_dir = File.dirname(__FILE__)
        user = '<<parameters.chef-supermarket-user>>'
        org = '<<parameters.chef-server-organization>>'
        node_name                user
        client_key               "#{current_dir}/#{user}.pem"
        chef_server_url          "<<parameters.chef-server-url>>/organizations/#{org}"
        cookbook_path            ["/root"]
        knife[:supermarket_site] = '<<parameters.chef-supermarket-url>>'
  #- run: mkdir -p ./cookbook/$(grep -oP "(?<=name ')[^' ]+" ./metadata.rb)
  #- run: rsync -au ./* ./cookbook/$(grep -oP "(?<=name ')[^' ]+" ./metadata.rb)
  #- run: knife ssl check https://chef-supermarket.onnetgain.com
  #- run: knife supermarket share $(grep -oP "(?<=name ')[^' ]+" ./metadata.rb) -o ./cookbook --supermarket-site https://chef-supermarket.onnetgain.com -u chef-supermarket -k /root/.chef/chef-supermarket.pem
  - run: knife supermarket share $(grep -oP "(?<=name ')[^' ]+" ./metadata.rb)
